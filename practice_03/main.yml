---
# Перед запуском ansible-lint создать файл .ansible-lint
# skip_list:
#   - fqcn-builtins
#   - meta-incorrect
#   - meta-no-info

- name: install NGINX && MARIADB
  hosts: nodes
  become: true
  become_method: sudo
  vars:
    cert_path: "/etc/nginx/ssl"
    cert_name: "nginx"
    nginx_port: 443
  tasks:

    # - name: Install collection ansible.*
    #   vars:
    #     names: "ansible.posix community.crypto"
    #   command: "ansible-galaxy collection install {{names}}"
    #   delegate_to: localhost
    #   run_once: true
    #   become: false

    - name: install required...
      block:
        - name: install required apt packets
          apt:
            name: "{{ apt_name }}"
            update_cache: true
            state: present
          loop:
            - 'python3-pip'
            - 'firewalld'
          loop_control:
            loop_var: apt_name
          tags: always

        - name: install required python modules
          pip:
            name: "{{ pip_module }}"
          loop: ['cryptography', 'pyopenssl']
          loop_control:
            loop_var: pip_module
          tags: 
            - ca
            - nginx

        - name: Generate certificates
          include_role:
            name: "nginx_certificate"
            apply:
              tags:
                - ca
          tags:
            - never

        - name: Install nginx
          include_role:
            name: nginx
            handlers_from: main.yml
            apply:
              tags:
                - nginx
          tags:
            - always

        - name: Install mysql
          include_role:
            name: "mariadb"
            apply:
              tags:
                - db
          tags:
            - always
      when:
        - "ansible_facts.distribution | lower == 'ubuntu'"

  post_tasks:
    - name: check web site from control server
      uri:
        url: "https://{{ ansible_host }}:{{ nginx_port }}"
        return_content: true
        validate_certs: false
      connection: local
      register: example_webpage_out
      failed_when: example_webpage_out.status != 200
      become: false
      tags:
        - nginx
